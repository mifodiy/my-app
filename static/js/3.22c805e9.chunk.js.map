{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","id","name","path","className","s","dialog","active","activeClassName","activeLink","Message","massage","message","maxLength200","maxElementLength","DialogReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogItems","value","sendMessageCreator","newMessage","compose"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,mHCGtPC,EAA0B,SAACC,GAC3B,MAAM,CACFC,OAAQD,EAAME,KAAKD,SAcZE,IAXU,SAACC,GAAe,IAC/BC,EAD8B,4JAEhC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAHjB,GACJC,IAAML,WAOtC,OADqCM,YAAQX,EAARW,CAAiCL,K,2FCJ3DM,EATI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACjBC,EAAO,YAAcF,EACzB,OACI,qBAAKG,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASV,GAAIM,EAAMK,gBAAiBH,IAAEI,WAAtC,SAAmDP,OCGhDQ,EARC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACI,qBAAKP,UAAWC,IAAEO,QAAlB,SACKD,K,iCCIPE,EAAeC,YAAiB,KAclCC,EAAkBC,YAAU,CAC5BC,KAAM,eADYD,EAZF,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aAClB,OAAO,uBAAMC,SAAUD,EAAhB,UACH,cAACE,EAAA,EAAD,CAAOlB,KAAM,aACNmB,UAAWC,IACXC,SAAU,CAACC,IAAUX,KAE5B,8BACI,mDAkCGY,EAzBC,SAAC7B,GACb,IAAIP,EAAQO,EAAM8B,YAEdC,EAAkBtC,EAAMuC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY7B,GAAI6B,EAAE7B,GAAIC,KAAM4B,EAAE5B,UACvE6B,EAAmB1C,EAAM2C,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAErB,aAMnE,OACI,sBAAKR,UAAWC,IAAEuB,QAAlB,UACI,qBAAKxB,UAAWC,IAAE6B,YAAlB,SACKP,IAEL,sBAAKvB,UAAWC,IAAE2B,SAAlB,UACI,8BAAMD,IACN,8BACI,cAAChB,EAAD,CAAiBI,SAZhB,SAACgB,GACdvC,EAAMwC,mBAAmBD,EAAME,wB,yBCrBxBC,sBACXvC,aAPkB,SAACV,GACnB,MAAO,CACHqC,YAAarC,EAAMqC,eAKE,CAACU,yBAC1B5C,IAFW8C,CAGbb","file":"static/js/3.22c805e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"activeLink\":\"Dialogs_activeLink__34w6e\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsRedirect = (state) =>{\n    return{\n        isAuth: state.auth.isAuth\n    }\n}\nconst withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component{\n        render() {\n            if (!this.props.isAuth){return <Redirect to={'/login'}/>}\n            return <Component {...this.props}/>\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\n    return ConnectedAuthRedirectComponent;\n}\n\nexport default withAuthRedirect;","import s from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = ({id, name}) => {\n    let path = '/dialogs/' + id;\n    return(\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path} activeClassName={s.activeLink}>{name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import s from './../Dialogs.module.css'\n\nconst Message = ({massage}) => {\n    return (\n        <div className={s.message}>\n            {massage}\n        </div>\n    )\n}\n\nexport default Message;","import s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport * as React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormControls/FormControls\"\nimport {maxElementLength, required} from \"../../util/validators/validators\";\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\n\nconst maxLength200 = maxElementLength(200);\n\nconst DialogsForm = ({handleSubmit}) => {\n    return <form onSubmit={handleSubmit}>\n        <Field name={'newMessage'}\n               component={Textarea}\n               validate={[required, maxLength200]}\n        />\n        <div>\n            <button>Enter</button>\n        </div>\n    </form>\n}\n\nlet DialogReduxForm = reduxForm({\n    form: 'messagePage'\n})(DialogsForm)\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem id={d.id} name={d.name}/>)\n    let messagesElements = state.messages.map(m => <Message massage={m.message}/>)\n\n    let addMessage = (value) => {\n        props.sendMessageCreator(value.newMessage)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <div>\n                    <DialogReduxForm onSubmit={addMessage}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import * as React from \"react\";\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) =>{\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {sendMessageCreator}),\n    withAuthRedirect\n)(Dialogs)\n"],"sourceRoot":""}